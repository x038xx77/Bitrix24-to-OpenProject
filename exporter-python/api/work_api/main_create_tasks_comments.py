
import json
from fast_bitrix24 import Bitrix
from api_get_task_comments import get_task_comments
from get_user_id_opj import find_value_by_key
from datetime import datetime
from create_task_opj import create_openproject_task
from create_comments_task_opj import create_comments_task


def format_date(original_date):
    # Преобразовываем строку в объект datetime
    formatted_date=''
    if original_date:
        original_datetime = datetime.strptime(original_date, "%Y-%m-%dT%H:%M:%S%z")
        # Форматируем дату обратно в строку в нужном формате
        formatted_date = original_datetime.strftime("%Y-%m-%d")
    return formatted_date


# Загружаем данные из файла
file_path = 'tasks.json'
with open(file_path, 'r') as json_file:
    task_list = json.load(json_file)
url_webhook = 'https://a-link-a.bitrix24.ru/rest/692/xf4ouacgiudut942/'

old_created_tusk_numbers =  [10, 1000, 1002, 1004, 1006, 1008, 1010, 1012, 1014, 1016, 1018, 1020, 1022, 1024, 1026, 2802, 2804, 2806, 2808, 2810, 2812, 2814, 2816, 2818, 2820, 2822, 2824, 2830, 2832, 2834, 2836, 2840, 2842, 2844, 2846, 2848, 2850, 3902, 3904, 3908, 3912, 3914, 3916, 3918, 392, 3920, 3922, 3924, 3926, 3928, 3930, 3932, 3934, 3936, 3938, 394, 3942, 3946, 208, 2080, 2084, 2086, 2088, 2090, 2092, 2094, 2096, 2098, 2100, 2102, 2104, 2106, 2110, 1028, 1096, 1130, 1166, 1214, 1256, 1296, 1334, 1406, 1462, 1528, 1576, 1636, 1668, 3214, 3216, 3218, 3220, 3222, 3228, 3230, 3232, 3234, 3236, 3238, 324, 3240, 3242, 3244, 1464, 1466, 1468, 1470, 1472, 1474, 1476, 1480, 1482, 1484, 1486, 1488, 1490, 1492, 1494, 1496, 1498, 1500, 1502, 1504, 1506, 1508, 1510, 1512, 1514, 1516, 1518, 1520, 1522, 1524, 1526, 4866, 4868, 4870, 4872, 4874, 4878, 488, 4880, 4882, 4884, 4886, 4890, 4894, 4896, 4898, 4900, 4903, 4904, 4910, 4912, 4918, 4920, 4924, 2486, 2488, 2492, 2494, 2496, 2498, 250, 2506, 2508, 2510, 2512, 2514, 2516, 2518, 252, 2520, 2522, 2524, 2526, 2528, 2530, 4476, 4478, 4480, 4482, 4484, 4486, 4488, 4490, 4492, 4494, 4496, 450, 4500, 4502, 4504, 4506, 4508, 4514, 452, 4532, 4534, 4536, 454, 456, 302, 3024, 3028, 3030, 3032, 3034, 3036, 3038, 3040, 3042, 3044, 3046, 3048, 3050, 3052, 3530, 3536, 3538, 3540, 3542, 3544, 3546, 3550, 3552, 3554, 3556, 3558, 3560, 3562, 3564, 3566, 3568, 3570, 3574, 3576, 3580, 3582, 3584, 3586, 3588, 780, 782, 784, 788, 790, 792, 794, 796, 798, 8, 80, 800, 802, 804, 806, 808, 810, 1638, 1640, 1642, 1644, 1646, 1648, 1650, 1652, 1654, 1656, 1658, 166, 1662, 1664, 1666, 2242, 2244, 2246, 2248, 2250, 2252, 2254, 2256, 2258, 226, 2260, 2262, 2264, 2266, 2268, 2270, 2274, 2276, 2278, 4162, 4164, 4166, 4168, 4172, 4176, 4178, 418, 4180, 4186, 4188, 4190, 4192, 4194, 4196, 1216, 1218, 1220, 1222, 1224, 1226, 1230, 1232, 1236, 1238, 124, 1240, 1242, 1244, 1246, 1248, 1250, 1252, 2628, 2630, 2632, 2634, 2636, 2638, 264, 2640, 2642, 2644, 2646, 2648, 2650, 2652, 2654, 2934, 2936, 2938, 2940, 2942, 2944, 2946, 2948, 2950, 2952, 2954, 2956, 2958, 2960, 2962, 648, 650, 652, 654, 656, 658, 660, 662, 664, 666, 668, 672, 674, 676, 678, 1834, 1836, 1838, 184, 1840, 1842, 1844, 1846, 1848, 1850, 1852, 1854, 1856, 1858, 186, 868, 876, 878, 880, 882, 884, 886, 888, 890, 892, 894, 896, 898, 900, 902, 904, 906, 908, 910, 4756, 4758, 4762, 4766, 4768, 4770, 4772, 4774, 4778, 4780, 4782, 4784, 4786, 4788, 4790, 4792, 4028, 4030, 4032, 4034, 4036, 4038, 404, 4040, 4050, 4054, 4056, 4058, 406, 4060, 4062, 4066, 4070, 4072, 4074, 4076, 408, 4080, 4082, 340, 3400, 3402, 3404, 3406, 3408, 3410, 3414, 3416, 3418, 342, 3420, 3422, 3424, 3426, 3680, 3682, 3684, 3686, 3688, 3690, 3692, 3694, 3696, 3698, 3700, 3702, 3704, 3706, 3708, 1098, 110, 1100, 1102, 1104, 1106, 1108, 1110, 1112, 1118, 112, 1120, 1122, 1124, 1126, 1530, 1532, 1534, 1536, 1538, 154, 1540, 1542, 1546, 1548, 1550, 1552, 1554, 1556, 1558, 156, 1560, 1562, 1564, 1566, 1568, 1570, 1572, 1574, 4350, 4356, 4358, 4360, 4362, 4364, 4366, 4368, 4370, 4372, 4374, 4376, 4378, 4380, 4382, 2360, 2362, 2364, 2366, 2368, 2370, 2372, 2374, 2376, 2378, 238, 2380, 2384, 2386, 2390, 1336, 134, 1340, 1342, 1346, 1348, 136, 138, 1390, 1396, 1398, 14, 140, 1400, 1404, 1724, 1726, 1728, 1730, 1732, 1734, 1738, 1740, 1742, 1744, 1746, 1748, 1750, 1752, 1754, 3070, 3130, 3210, 3246, 3304, 3398, 3428, 3520, 3590, 3626, 3678, 3710, 3900, 3948, 4026, 4084, 4120, 3134, 3138, 3140, 3142, 3144, 3146, 3148, 3150, 3152, 3154, 3156, 3162, 3164, 3166, 3168, 3170, 3172, 3174, 3176, 3180, 3182, 3186, 3192, 3194, 3196, 3198, 32, 320, 3200, 3202, 3208, 2158, 2160, 2168, 2170, 2172, 2174, 2180, 2182, 2184, 2186, 2188, 2190, 2192, 2194, 2196, 1916, 1918, 192, 1920, 1922, 1924, 1926, 1928, 1930, 1936, 1938, 194, 1940, 1942, 1944, 576, 578, 580, 582, 584, 586, 588, 590, 592, 594, 596, 598, 6, 60, 600, 2726, 2728, 2732, 2734, 2736, 2738, 2740, 2742, 2744, 2746, 2748, 2750, 2752, 2754, 2756, 604, 606, 608, 610, 612, 614, 616, 618, 62, 620, 622, 624, 626, 630, 632, 634, 636, 638, 640, 642, 644, 716, 718, 72, 722, 724, 726, 730, 732, 734, 736, 738, 74, 740, 744, 746, 748, 76, 760, 762, 764, 766, 768, 770, 772, 776, 680, 682, 684, 688, 690, 692, 694, 696, 698, 70, 700, 702, 704, 708, 710, 712, 816, 818, 82, 820, 822, 824, 826, 828, 830, 832, 834, 838, 840, 842, 844, 846, 848, 850, 852, 854, 856, 858, 860, 862, 864, 918, 920, 922, 923, 924, 926, 928, 930, 932, 934, 938, 940, 942, 944, 946, 950, 952, 954, 958, 960, 962, 964, 966, 968, 972, 976, 982, 986, 989, 991, 992, 994, 996, 998, 1030, 1032, 1034, 1036, 1038, 1048, 1054, 1056, 1058, 106, 1060, 1062, 1064, 1066, 1068, 1070, 1072, 1074, 1076, 1078, 108, 1080, 1082, 1084, 1086, 1088, 1090, 1092, 1094, 1132, 1134, 1136, 1138, 114, 1140, 1142, 1144, 1152, 1154, 1156, 116, 1160, 1162, 1164, 1168, 1174, 118, 1180, 1182, 1184, 1186, 1190, 1192, 1194, 1196, 1198, 1200, 1202, 1204, 1206, 1208, 1210, 1212, 1258, 1262, 1268, 1270, 1272, 1274, 1276, 1278, 1280, 1282, 1284, 1286, 1290, 1292, 1294, 1298, 130, 1302, 1304, 1306, 1308, 1310, 1312, 1313, 1314, 1316, 1318, 132, 1320, 1322, 1324, 1326, 1328, 1330, 1332, 1408, 1410, 1412, 1414, 1416, 1418, 1420, 1422, 1424, 1426, 1428, 1430, 1432, 1434, 1436, 1438, 1440, 1442, 1444, 1446, 1448, 1450, 1454, 1456, 1460, 1578, 158, 1580, 1582, 1584, 1586, 1588, 1594, 1596, 1598, 16, 1602, 1604, 1606, 1608, 1610, 1612, 1614, 1616, 1618, 1620, 1622, 1624, 1626, 1628, 1632, 1634, 1670, 1672, 1674, 1676, 1678, 168, 1680, 1682, 1688, 1692, 1694, 1698, 170, 1700, 1702, 1704, 1706, 1708, 1710, 1712, 1714, 1716, 1718, 1720, 1758, 1760, 1762, 1764, 1766, 1768, 1770, 1772, 1774, 1776, 1778, 1780, 1782, 1784, 1786, 1790, 1794, 1796, 1798, 1800, 1802, 1804, 1806, 1808, 1810, 1812, 1816, 1822, 1824, 1826, 1828, 1830, 1864, 1866, 1868, 1870, 1872, 1874, 1876, 1878, 188, 1880, 1882, 1884, 1886, 1888, 1890, 1892, 1894, 1896, 1898, 190, 1900, 1902, 1904, 1906, 1908, 1910, 1912, 1948, 1950, 1952, 1954, 1956, 196, 1960, 1962, 1964, 1966, 1968, 198, 200, 2004, 2006, 1756, 1788, 1832, 1860, 1914, 1946, 2008, 2078, 2112, 2156, 2198, 2240, 228, 2312, 236, 2392, 2420, 2484, 2532, 2564, 2626, 2656, 2724, 2758, 2800, 2852, 2884, 2932, 2964, 2010, 202, 2020, 2022, 204, 2050, 2052, 206, 2060, 2062, 2064, 2066, 2068, 2070, 2072, 2074, 2076, 2114, 2116, 2118, 2120, 2122, 2126, 2128, 2130, 2134, 2138, 2140, 2142, 2144, 2146, 2148, 2150, 2152, 2154, 22, 2200, 2202, 2204, 2206, 2208, 2210, 2212, 2214, 2216, 2218, 2220, 2222, 2224, 2226, 2228, 2230, 2232, 2234, 2236, 2238, 2280, 2282, 2284, 2286, 2288, 2290, 2292, 2296, 2298, 230, 2300, 2302, 2304, 2306, 2310, 2314, 2316, 2318, 2320, 2322, 2324, 2328, 2330, 2332, 2336, 2338, 234, 2340, 2342, 2346, 2348, 2350, 2352, 2354, 2356, 2358, 2394, 2398, 24, 240, 2400, 2402, 2404, 2406, 2408, 2410, 2412, 2414, 2416, 2418, 242, 2422, 2424, 2426, 2428, 2430, 2432, 2434, 2436, 2438, 244, 2440, 2442, 246, 2464, 2466, 2470, 2472, 2474, 2476, 2478, 248, 2480, 2482, 2534, 2536, 2538, 254, 2540, 2542, 2544, 2546, 2548, 2554, 2556, 2558, 256, 2560, 2562, 2566, 2568, 2572, 2574, 2576, 2578, 258, 2582, 2584, 2588, 2592, 2594, 2596, 2598, 26, 260, 2602, 2604, 2606, 2616, 2618, 2620, 2622, 2624, 2658, 2660, 2662, 2664, 2670, 2674, 2676, 2678, 268, 2680, 2682, 2686, 2688, 2690, 2692, 2694, 2696, 2698, 270, 2700, 2702, 2704, 2706, 2714, 2716, 2718, 2720, 2722, 276, 2760, 2762, 2764, 2766, 2768, 2770, 2772, 2774, 2778, 2780, 2782, 2784, 2786, 2788, 2790, 2792, 2794, 2796, 2798, 28, 2854, 2856, 2858, 2860, 2862, 2864, 2866, 2868, 2870, 2872, 2874, 2876, 2878, 2880, 2882, 2886, 2888, 2894, 2896, 2898, 2904, 2908, 2910, 2912, 2914, 2916, 2918, 292, 2920, 2924, 2928, 2930, 2966, 2968, 2970, 2972, 2976, 2978, 298, 2980, 2982, 2984, 2986, 2988, 2990, 2992, 2994, 2996, 2998, 3, 300, 3000, 3004, 3008, 3010, 3012, 3014, 3072, 3074, 3078, 3080, 3082, 3084, 3086, 3088, 3090, 3092, 3094, 3096, 3102, 3104, 3106, 3108, 3110, 3112, 3114, 3120, 3122, 3124, 3126, 3306, 3308, 3318, 332, 3320, 3322, 3332, 3334, 3336, 3340, 3342, 3344, 3348, 3350, 3352, 3354, 3356, 3358, 336, 3360, 3368, 3372, 3374, 3388, 3390, 3392, 3394, 3396, 3252, 3254, 3256, 326, 3268, 3270, 3274, 328, 3282, 3284, 3290, 3292, 3294, 3296, 3298, 3300, 3302, 3432, 3434, 3436, 344, 3440, 346, 348, 3490, 3492, 3498, 350, 3500, 3504, 3506, 3508, 3510, 3514, 3516, 3518, 3592, 3594, 3596, 3598, 36, 3600, 3602, 3604, 3606, 3608, 3612, 3614, 3616, 3618, 3624, 3630, 3632, 3634, 3638, 3640, 3642, 3644, 3646, 3648, 3650, 3652, 3654, 3656, 3658, 3660, 3662, 3664, 3666, 3668, 3670, 3672, 3674, 3676, 3712, 3714, 3716, 3728, 3730, 3732, 3746, 3748, 38, 3806, 3822, 3824, 3826, 3836, 3838, 3840, 3846, 3866, 3868, 3870, 3872, 3892, 3896, 3898, 3950, 3952, 3954, 3956, 3958, 396, 3960, 3962, 3968, 398, 3982, 3984, 3990, 3996, 3998, 40, 400, 4000, 4002, 4004, 4006, 4008, 4010, 4012, 4018, 402, 4198, 4242, 4348, 4384, 4432, 4474, 4598, 4700, 4754, 4794, 4864, 4926, 574, 602, 646, 68, 714, 778, 812, 866, 916, 948, 1722, 3018, 416, 4086, 4088, 4090, 4092, 4094, 4096, 4098, 410, 4100, 4106, 4110, 4112, 4114, 4116, 4118, 4122, 4124, 4126, 4128, 4132, 4134, 4136, 4138, 414, 4140, 4142, 4144, 4148, 4150, 4152, 4154, 4156, 4158, 42, 4200, 4202, 4206, 4208, 4214, 4216, 4218, 4222, 4228, 4230, 4232, 4234, 4238, 4240, 4250, 4254, 4256, 4262, 4266, 4268, 4270, 4274, 4276, 4288, 4300, 4316, 4318, 4326, 4328, 4330, 4332, 4334, 4336, 4340, 4342, 4344, 4386, 4388, 4390, 4398, 44, 4402, 4404, 4408, 4410, 4412, 4414, 4420, 4422, 4424, 4426, 4434, 4440, 4446, 4450, 4452, 4454, 4456, 4458, 446, 4460, 4462, 4464, 4466, 4468, 4470, 4472, 4600, 4602, 4604, 4606, 4608, 4610, 4612, 4614, 4618, 4674, 4676, 4682, 4686, 4688, 4692, 4702, 4704, 4706, 4714, 4716, 4718, 472, 4724, 4726, 4728, 4730, 4732, 4736, 474, 4740, 4742, 4744, 4746, 4748, 4750, 4752, 4796, 4798, 480, 4800, 4802, 4806, 4808, 4810, 4816, 4820, 4822, 4824, 4830, 4832, 4836, 4838, 4840, 4842, 4846, 4848, 4852, 4854, 4856, 4858, 4862, 4928, 4932, 50, 52, 54, 540, 542, 544, 546, 554, 556, 558, 560, 562, 568, 570, 572]

for task in task_list:
    task_id_bx24_int = int(task['ID'])
    try:
        if task_id_bx24_int in old_created_tusk_numbers:
            print(f"Task пропущен{task_id_bx24_int}")
            continue  # Пропустить текущую итерацию и перейти к следующей
    
        task_id_bx24 = task['ID']
        task_project_id = task['GROUP_ID']    
        task_title = task['TITLE']
        task_description = task['DESCRIPTION']
        task_responsible_user = task['RESPONSIBLE_ID']
        task_username_created = task['CREATED_BY']
        task_created = format_date(task['CREATED_DATE'])
        task_closed = format_date(task['CLOSED_DATE'])
        task_comments_count = task['COMMENTS_COUNT']

        obj_for_create_task = {
        "subject": task_title,
        "name": "Task",
        "description": {
            "format": "markdown",
            "raw": task_description
            },
            # "author": {
            #     "href": f'/api/v3/users/{find_value_by_key(task_responsible_user) or 9}'
            # },
            "startDate": task_created,
        "dueDate": task_closed   
        }

        #Создаем Задачи
   
        id_result_new_task_created = create_openproject_task(obj_for_create_task, task_project_id)
        
    except Exception as e:
            print(f"An error occurred while creating tasks : {str(e)}")
    #ggg
    if id_result_new_task_created is not None and task_comments_count and int(task_comments_count)>0:
        # получаем список комментариев
        print("============TASK=========", id_result_new_task_created)
        try:
            task_comments = get_task_comments(task_id_bx24, url_webhook)
        except Exception as e:
            print(f"An error occurred while get comments : {str(e)}")
               

        for comment in task_comments:
            # create openproject comment
            link_show = ''
            link_name = ''
            link_download = ''
            link_content = ''
            try:
                if comment['ATTACHED_OBJECTS']:
                    first_attachment_data = next(iter(comment.get("ATTACHED_OBJECTS", {}).values()), {})
                    download_url = first_attachment_data.get('DOWNLOAD_URL')
                    link_name = first_attachment_data.get('NAME')
                    link_show = f"https://a-link-a.bitrix24.ru{first_attachment_data.get('VIEW_URL')}"
                    link_download = f"https://a-link-a.bitrix24.ru{first_attachment_data.get('DOWNLOAD_URL')}"
                    link_content = f"посмотреть файл {link_name} bx24 {link_show} \n заргузить с bx24 {link_download} \n OpenProject: /task/{task_id_bx24}/comment/{comment['ID']}/{link_name}"
                   
            except Exception as e:
                print(f"An error occurred while ATTACHED_OBJECTS get comments : {str(e)}")
            
            comment_payload = {
                "comment": {
                    "format": "markdown",
                    "raw": f"Автор {comment['AUTHOR_NAME']} \n {comment['POST_MESSAGE']} \n {link_content}"
                    },
                    "responsible": {
                        "href": f"/api/v3/users/{find_value_by_key(comment['AUTHOR_ID']) or 9}"
                    }
                                }

                  #создаем комментарии
            print("COMMENT=====comment_payload",comment_payload)
            try:
                create_comments_task(id_result_new_task_created, comment_payload)
            except Exception as e:
                print(f"An error occurred while creating comments : {str(e)}")

            print("Кол-во комментариев", task_comments_count)

       

    # print("Проект", task_project)
    # print("Название", task_title)
    # print("Описаните", task_description)
    # print("Ответственный", task_responsible_user)
    # print("Кто создал", task_username_created)    
    # print("Дата создания", task_created)
    # print("Дата закрытия", task_closed)
   
    
    print('=====================Создана задача===============================')